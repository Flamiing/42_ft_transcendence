version: '3.8'

networks:
  transcendence:
    driver: bridge

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: ./.docker-volume-mnt/postgres_data
      o: bind
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      device: ./.docker-volume-mnt/prometheus_data
      o: bind
  grafana-data:
    driver: local
    driver_opts:
      type: none
      device: ./.docker-volume-mnt/grafana_data
      o: bind
  elastic-data:
    driver: local
    driver_opts:
      type: none
      device: ./.docker-volume-mnt/elastic_data
      o: bind
  common-log-data:
    driver: local
    driver_opts:
      type: none
      device: ./.docker-volume-mnt/commonlog_data
      o: bind


services:
  postgres:
    container_name: postgres-dev
    restart: unless-stopped
    image: postgres:16
    networks:
      - transcendence
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  django:
    container_name: django-dev
    restart: unless-stopped
    build: .
    networks:
      - transcendence
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - 8000:8000
    volumes:
      - .:/home:delegated
      - common-log-data:/var/log/django/


# Monitoring
  prometheus:
    container_name: prometheus-dev
    image:  prom/prometheus:v2.47.2
    restart: unless-stopped
    networks:
      - transcendence
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:10.2.1
    container_name: grafana-dev
    env_file:
      - .env
    networks:
      - transcendence
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/custom-dashboards:ro
      - ./grafana/main.yaml:/etc/grafana/provisioning/dashboards/main.yaml:ro
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro

    restart: unless-stopped

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: postgres-exporter-dev
    restart: unless-stopped
    networks:
      - transcendence
    env_file:
      - .env

# ELK
  elasticsearch:
    image: elasticsearch:8.11.1
    container_name: elasticsearch-dev
    restart: unless-stopped
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elastic-data:/usr/share/elasticsearch/data/
    ports:
    - 9200:9200
    - 9300:9300
    networks:
      - transcendence
    env_file:
      - .env
    mem_limit: 1GB

  logstash:
    image: logstash:8.11.1
    container_name: logstash-dev
    restart: unless-stopped
    volumes:
    - ./logstash/logstash.conf:/logstash/logstash.conf
    - common-log-data:/var/log/django/:ro
    command: logstash -f /logstash/logstash.conf --config.reload.automatic
    depends_on:
      - elasticsearch
    ports:
    - 9600:9600
    - 50000:50000
    env_file:
      - .env
    networks:
      - transcendence
    mem_limit: 1GB

  kibana:
    image: kibana:8.11.1
    container_name: kibana-dev
    restart: unless-stopped
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
    - 5601:5601
    env_file:
      - .env
    depends_on:
      - elasticsearch  
    networks:
      - transcendence

  elasticsearch-setup:
    container_name: elasticsearch-setup-dev
    build: ./elasticsearch-setup
    volumes:
      - ./elasticsearch-setup/kibana:/kibana:ro
      - ./elasticsearch-setup/templates:/templates:ro
      - ./elasticsearch-setup/policies:/policies:ro
      - ./elasticsearch-setup/roles:/roles:ro
      - ./elasticsearch-setup/entrypoint.sh:/entrypoint.sh:ro
      - ./elasticsearch-setup/lib.sh:/lib.sh:ro
    depends_on:
      - elasticsearch  
    restart: no
    networks:
      - transcendence
    env_file:
      - .env

# Only for Dev:
  adminer:
    container_name: adminer
    image: adminer:latest
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - transcendence
    ports:
      - 9001:8080
    environment:
      - ADMINER_DEFAULT_SERVER=postgres-dev

